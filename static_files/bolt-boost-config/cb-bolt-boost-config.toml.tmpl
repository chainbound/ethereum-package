# The main configuration file for the Commit-Boost sidecar.
# Some fields are optional and can be omitted, in which case the default value, if present, will be used.

# Chain spec id. Supported values: Mainnet, Holesky, Helder, Custom
{{- if eq .chain_config.name "Kurtosis" }}
[chain]
genesis_time_secs = {{ .chain_config.genesis_timestamp }}
slot_time_secs = {{ .chain_config.seconds_per_slot }}
genesis_fork_version = "{{ .chain_config.genesis_fork_version }}"
{{- else }}
chain = "{{ .chain_config.name }}"
{{- end }}

# Configuration for the PBS module
[pbs]
# Docker image to use for the PBS module.
# BOLT: We use the bolt-boost PBS module here.
docker_image = "{{ .image }}"

# Whether to enable the PBS module to request signatures from the Signer module (not used in the default PBS image)
# OPTIONAL, DEFAULT: false
with_signer = {{ or .with_signer false }}

# Port to receive BuilderAPI calls from beacon node
port = {{ .port }}

# Whether to forward `status` calls to relays or skip and return 200
# OPTIONAL, DEFAULT: true
relay_check = {{ or .relay_check true }}

# Timeout in milliseconds for the `get_header` call to relays. Note that the CL has also a timeout (e.g. 1 second) so
# this should be lower than that, leaving some margin for overhead
# OPTIONAL, DEFAULT: 950
timeout_get_header_ms = {{ or .timeout_get_header_ms "950" }}

# Timeout in milliseconds for the `submit_blinded_block` call to relays.
# OPTIONAL, DEFAULT: 4000
timeout_get_payload_ms = {{ or .timeout_get_payload_ms "4000" }}

# Timeout in milliseconds for the `register_validator` call to relays.
# OPTIONAL, DEFAULT: 3000
timeout_register_validator_ms = {{ or .timeout_register_validator_ms "3000" }}

# Whether to skip signature verification of headers against the relay pubkey
# OPTIONAL, DEFAULT: false
skip_sigverify = {{ or .skip_sigverify false }}

# Minimum bid in ETH that will be accepted from `get_header`
# OPTIONAL, DEFAULT: 0.0
min_bid_eth = {{ or .min_bid_eth "0.0" }}

# List of URLs of relay monitors to send registrations to
# OPTIONAL
relay_monitors = []

# How late in milliseconds in the slot is "late". This impacts the `get_header` requests, by shortening timeouts for `get_header` calls to
# relays and make sure a header is returned within this deadline. If the request from the CL comes later in the slot, then fetching headers is skipped
# to force local building and minimizing the risk of missed slots.
# OPTIONAL, DEFAULT: 2000
late_in_slot_time_ms = {{ or .late_in_slot_time_ms "2000" }}

# The PBS module needs one or more [[relays]] as defined below.
{{ range $relay_config := .relays_config }}
[[relays]]
# Relay ID to use in telemetry
# OPTIONAL, DEFAULT: URL hostname
id = "{{ $relay_config.id }}"

# Relay URL in the format scheme://pubkey@host
url = "{{ $relay_config.url }}"

# Headers to send with each request for this relay
# OPTIONAL
# headers = {{ or $relay_config.headers "{}" }}

# Whether to enable timing games, as tuned by `target_first_request_ms` and `frequency_get_header_ms`.
# OPTIONAL, DEFAULT: false
enable_timing_games = {{ or $relay_config.enable_timing_games false }}

# Target time in slot when to send the first header request
# OPTIONAL
target_first_request_ms = {{ or $relay_config.target_first_request_ms "200" }}

# Frequency in ms to send get_header requests
# OPTIONAL
frequency_get_header_ms = {{ or .frequency_get_header_ms "300" }}

{{ end }}

# Configuration for the Signer Module, only required if any `commit` module is present, or if `pbs.with_signer = true`
# OPTIONAL
[signer]
# Docker image to use for the Signer module.
# OPTIONAL, DEFAULT: ghcr.io/commit-boost/signer:latest
docker_image = "{{ or .signer_image "ghcr.io/commit-boost/signer:latest" }}"

# Configuration for how the Signer module should load validator keys. Currently two types of loaders are supported:
#   - File: load keys from a plain text file (unsafe, use only for testing purposes)
#   - ValidatorsDir: load keys from a `keys` and `secrets` folder (ERC-2335 style keystores as used in Lighthouse)
[signer.loader]
# File: path to the keys file
key_path = "./keys.json"
# ValidatorsDir: path to the keys directory
# keys_path = ""
# ValidatorsDir: path to the secrets directory
# secrets_path = ""

# Commit-Boost can optionally run "modules" which extend the capabilities of the sidecar.
# Currently, two types of modules are supported:
#   - "commit": modules which request commitment signatures from the validator keys
#   - "events": modules which callback to BuilderAPI events as triggered from the PBS modules, used e.g. for monitoring
# If any "commit" module is present, then the [signer] section should also be configured
# OPTIONAL
[[modules]]
# Unique ID of the module
id = "BOLT"
# Type of the module. Supported values: commit, events
type = "commit"
# Docker image of the module
docker_image = "{{ .image }}"

[modules.env]
BOLT_SIDECAR_CHAIN = "{{ or .chain "Kurtosis" }}"

# The address of the PBS module
BOLT_SIDECAR_CONSTRAINTS_API = "{{ .bolt_sidecar_config.constraints_api_url }}"
BOLT_SIDECAR_BEACON_API = "{{ .bolt_sidecar_config.beacon_api_url }}"
BOLT_SIDECAR_EXECUTION_API = "{{ .bolt_sidecar_config.execution_api_url }}"

# The execution layer engine API endpoint
BOLT_SIDECAR_ENGINE_API = "{{ .bolt_sidecar_config.engine_api_url }}"

# The engine JWT
BOLT_SIDECAR_JWT_HEX = "{{ .bolt_sidecar_config.jwt_hex }}"

# The port on which the sidecar builder-API will listen on. This is what your beacon node should connect to.
BOLT_SIDECAR_BUILDER_PROXY_PORT = {{ .bolt_sidecar_config.builder_proxy_port }}

# The fee recipient
BOLT_SIDECAR_FEE_RECIPIENT = "{{ or .bolt_sidecar_config.fee_recipient "0x0000000000000000000000000000000000000000" }}"

# Metrics port
BOLT_SIDECAR_METRICS_PORT = {{ or .bolt_sidecar_config.metrics_port "10000" }}
